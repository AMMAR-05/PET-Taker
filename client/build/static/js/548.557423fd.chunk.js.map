{"version":3,"file":"static/js/548.557423fd.chunk.js","mappings":"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","sources":["Auth/Signup/Signup.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Backdrop, CircularProgress, createTheme } from \"@mui/material\";\r\nimport DoneOutlineRoundedIcon from \"@mui/icons-material/DoneOutlineRounded\";\r\nimport { AuthContext } from \"../../shared/Context/authContext\";\r\n\r\n// Copy right\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      paddingTop={3}\r\n      height=\"3.7rem\"\r\n      {...props}\r\n    >\r\n      {\"Copyright Â© \"}\r\n      <Link to=\"/\">Pet Taker</Link> {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n// User Schema\r\nconst userSchema = yup.object().shape({\r\n  firstName: yup\r\n    .string()\r\n    .min(2)\r\n    .max(20)\r\n    .trim()\r\n    .lowercase()\r\n    .required(true, \"please provide your first name\"),\r\n  lastName: yup\r\n    .string()\r\n    .min(2)\r\n    .max(20)\r\n    .trim()\r\n    .lowercase()\r\n    .required(true, \"please provide your last name\"),\r\n  userName: yup\r\n    .string()\r\n    .min(2)\r\n    .max(20)\r\n    .trim()\r\n    .lowercase()\r\n    .required(true, \"please provide your user name\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"Invalid email format\")\r\n    .min(2)\r\n    .max(50)\r\n    .trim()\r\n    .lowercase()\r\n    .required(true, \"please provide your user name\"),\r\n  password: yup\r\n    .string()\r\n    .min(8)\r\n    .max(150)\r\n    .trim()\r\n    .lowercase()\r\n    .required(true, \"please provide your a password\"),\r\n  // passwordConfirm: yup\r\n  //   .string()\r\n  //   .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nfunction Signup() {\r\n  const [succeed, setSucceed] = useState(false);\r\n  const [isLoading, setIsloading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  // user navigate\r\n  let navigate = useNavigate();\r\n\r\n  // React hook Form\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(userSchema),\r\n  });\r\n\r\n  ////////// File Uplaod //////////\r\n  const [image, setImage] = useState(null);\r\n\r\n  // onSelectFilesHandler\r\n  const onSelectFile = (e) => {\r\n    if (!e.target.files || e.target.files === 0) {\r\n      setImage(undefined);\r\n      return;\r\n    }\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  //  onRemoveFilesHandler\r\n  const onRemoveFile = (e) => {\r\n    setImage(null);\r\n  };\r\n\r\n  // Send data to sign up a user\r\n  const onSubmit = async (userData) => {\r\n    // turn on loading spinner\r\n    setIsloading(true);\r\n\r\n    try {\r\n      const finalUser = { ...userData, image };\r\n      console.log(finalUser, \"1\");\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"firstName\", finalUser.firstName);\r\n      formData.append(\"lastName\", finalUser.lastName);\r\n      formData.append(\"userName\", finalUser.userName);\r\n      formData.append(\"email\", finalUser.email);\r\n      formData.append(\"password\", finalUser.password);\r\n      formData.append(\"image\", finalUser.image);\r\n\r\n      console.log(formData, \"2\");\r\n      const res = await fetch(process.env.REACT_APP_BACKEND_URL + \"/signup\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      // get response from backend\r\n      const data = await res.json();\r\n\r\n      // if there is a 400 or 500 error code throw an error\r\n      if (!res.ok) {\r\n        throw new Error(data.message);\r\n      }\r\n\r\n      // if there is no errors\r\n      // Extract retrived data\r\n      const result = data.data.user;\r\n\r\n      console.log(result, \"result\");\r\n      // turn success alert\r\n      setSucceed(true);\r\n\r\n      // turn off success alert and redirect to home page\r\n      setTimeout(() => {\r\n        setSucceed(false);\r\n        return navigate(\"/\");\r\n      }, 2000);\r\n\r\n      // turn off loading spinner\r\n      setIsloading(false);\r\n\r\n      // Continue This\r\n      // set user image\r\n      auth.signup(result.image);\r\n      // extract user id on signup\r\n      auth.login(result._id, data.token, result.userName);\r\n    } catch (err) {\r\n      // turn off loading spinner\r\n      setIsloading(false);\r\n      // Show error message\r\n      setError(err.message);\r\n    }\r\n    // reset form inputs\r\n    reset();\r\n  };\r\n\r\n  // Them Provider\r\n  const theme = createTheme({\r\n    typography: {\r\n      fontFamily: \"Poppins\",\r\n    },\r\n    ThemeProvider: {\r\n      backgroundColor: \"#f4f4f4\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* Loading spinner */}\r\n      {isLoading && (\r\n        <Backdrop\r\n          sx={{\r\n            backgroundColor: \"#000000be\",\r\n            color: \"#ff4\",\r\n            zIndex: \"1\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n          open={true}\r\n        >\r\n          {/* loading icon */}\r\n          <CircularProgress color=\"inherit\" />\r\n\r\n          <Typography sx={{ mt: \"2rem\", fontSize: \"1.5rem\" }}>\r\n            Loading\r\n          </Typography>\r\n        </Backdrop>\r\n      )}\r\n      {/* success alert */}\r\n      {succeed && (\r\n        <Backdrop\r\n          sx={{\r\n            backgroundColor: \"#000000be\",\r\n            color: \"#00e676\",\r\n            zIndex: \"1\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n          open={true}\r\n        >\r\n          <DoneOutlineRoundedIcon sx={{ fontSize: \"5rem\" }} />\r\n          <Typography sx={{ mt: \"2rem\", fontSize: \"1.5rem\" }}>\r\n            register went successfully\r\n          </Typography>\r\n        </Backdrop>\r\n      )}\r\n\r\n      <ThemeProvider theme={theme}>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <Box\r\n            sx={{\r\n              paddingTop: 5.1,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up\r\n            </Typography>\r\n\r\n            <Box\r\n              component=\"form\"\r\n              autoComplete=\"off\"\r\n              // noValidate\r\n              onSubmit={handleSubmit(onSubmit)}\r\n              sx={{ mt: 3 }}\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    // name=\"firstName\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    autoFocus\r\n                    {...register(\"firstName\")}\r\n                  />\r\n                  <Typography variant=\"span\" color=\"crimson\">\r\n                    {errors.firstName?.message}\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    // name=\"lastName\"\r\n                    {...register(\"lastName\")}\r\n                  />\r\n                  <Typography variant=\"span\" color=\"crimson\">\r\n                    {errors.lastName?.message}\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    id=\"userName\"\r\n                    label=\"User Name\"\r\n                    // name=\"UserName\"\r\n                    {...register(\"userName\")}\r\n                  />\r\n                  <Typography variant=\"span\" color=\"crimson\">\r\n                    {errors.userName?.message}\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    // name=\"email\"\r\n                    {...register(\"email\")}\r\n                  />\r\n                  <Typography variant=\"span\" color=\"crimson\">\r\n                    {errors.email?.message}\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    // name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    {...register(\"password\")}\r\n                  />\r\n                  <Typography variant=\"span\" color=\"crimson\">\r\n                    {errors.password?.message}\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                {/* ********************** image Upload ************************ */}\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                    sx={{ mr: \"9.2rem\" }}\r\n                  >\r\n                    Upload Image\r\n                    <input\r\n                      style={{ display: \"none\" }}\r\n                      accept=\".jpg,.png,.jpeg\"\r\n                      name=\"image\"\r\n                      id=\"image\"\r\n                      label=\"image\"\r\n                      type=\"file\"\r\n                      onChange={onSelectFile}\r\n                    />\r\n                  </Button>\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                    component=\"span\"\r\n                    onClick={onRemoveFile}\r\n                    sx={{}}\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </Grid>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    overflow: \"hidden\",\r\n                    fontSize: \"16px\",\r\n                    background:\r\n                      \"linear-gradient(45deg, #30292F 40%, #3F4045 90%)\",\r\n                    fontWeight: \"700\",\r\n                    \":hover\": {\r\n                      background:\r\n                        \"linear-gradient(45deg, #3F4045  40%, #30292F  90%)\",\r\n                    },\r\n                    marginY: \"1rem\",\r\n                    marginLeft: \"1rem\",\r\n                  }}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n              </Grid>\r\n\r\n              {/* error */}\r\n              {error && (\r\n                <Typography\r\n                  variant=\"span\"\r\n                  sx={{ color: \"red\", textAlign: \"center\", mb: \"1rem\" }}\r\n                >\r\n                  {error}\r\n                </Typography>\r\n              )}\r\n\r\n              {/* already have an account */}\r\n              <Grid container justifyContent=\"flex-end\">\r\n                <Grid item>\r\n                  <Link to=\"/login\">\r\n                    <Typography sx={{ color: \"#3c52b2\", mt: \"1rem\" }}>\r\n                      Already have an account? Login\r\n                    </Typography>\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* Copyright */}\r\n          <Copyright sx={{}} />\r\n        </Container>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"],"names":["Copyright","props","variant","color","align","paddingTop","height","to","Date","getFullYear","userSchema","yup","shape","firstName","min","max","trim","lowercase","required","lastName","userName","email","password","useState","succeed","setSucceed","isLoading","setIsloading","error","setError","auth","useContext","AuthContext","navigate","useNavigate","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","image","setImage","onSubmit","userData","finalUser","console","log","formData","FormData","append","fetch","process","method","body","res","json","data","ok","Error","message","result","user","setTimeout","signup","login","_id","token","theme","createTheme","typography","fontFamily","ThemeProvider","backgroundColor","sx","zIndex","display","flexDirection","alignItems","open","mt","fontSize","component","maxWidth","m","bgcolor","autoComplete","container","spacing","item","xs","sm","fullWidth","id","label","autoFocus","type","justifyContent","mr","style","accept","name","onChange","e","target","files","undefined","onClick","overflow","background","fontWeight","marginY","marginLeft","textAlign","mb"],"sourceRoot":""}